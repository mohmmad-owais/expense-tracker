{"version":3,"sources":["context/AppReducer.js","context/GlobalState.js","components/AddTransaction.js","components/Balance.js","components/Header.js","components/IncomeExpenses.js","components/Transaction.js","components/TransactionList.js","App.js","index.js"],"names":["state","action","type","transactions","filter","transaction","id","payload","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addTransaction","AddTransaction","useState","text","setText","amount","setAmount","useContext","onSubmit","e","preventDefault","newTransaction","Math","floor","random","className","htmlFor","required","onChange","target","placeholder","Balance","total","map","reduce","acc","item","toFixed","Header","IncomeExpenses","amounts","income","expense","class","Transaction","sign","abs","onClick","TransactionList","App","ReactDOM","render","document","getElementById"],"mappings":"oNAAe,WAACA,EAAMC,GAClB,OAAOA,EAAOC,MACV,IAAK,qBACA,kCACOF,GADP,IAEIG,aAAcH,EAAMG,aAAaC,QAAO,SAAAC,GAAW,OAAIA,EAAYC,KAC5DL,EAAOM,aAElB,IAAK,kBACD,kCACOP,GADP,IAEIG,aAAa,CAAEF,EAAOM,SAAV,mBAAqBP,EAAMG,iBAGpD,QACA,OAAOH,ICVTQ,EAAa,CACfL,aAAc,IAILM,EAAgBC,wBAAcF,GAI9BG,EAAiB,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAAc,EACjBC,qBAAWC,EAAWN,GADL,mBACnCR,EADmC,KAC7Be,EAD6B,KAiB1C,OACI,cAACN,EAAcO,SAAf,CAAwBC,MAAO,CAC3Bd,aAAcH,EAAMG,aACpBe,kBAhBR,SAA2BZ,GACvBS,EAAS,CACLb,KAAM,qBACNK,QAAUD,KAcVa,eAXR,SAAwBd,GACpBU,EAAS,CACLb,KAAM,kBACNK,QAAUF,MAKd,SAKKO,KCaEQ,MA/Cf,WAA2B,IAAD,EACCC,mBAAS,IADV,mBACfC,EADe,KACVC,EADU,OAEIF,mBAAS,GAFb,mBAEfG,EAFe,KAERC,EAFQ,KAGfN,EAAiBO,qBAAWjB,GAA5BU,eAsBP,OACI,qCACI,qDACN,uBAAOQ,SAtBQ,SAAAC,GAEfA,EAAEC,iBACG,IAAMC,EAAiB,CACtBxB,GAAIyB,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBX,OACAE,QAAUA,GAGdL,EAAeW,IAajB,UACE,sBAAKI,UAAU,eAAf,UACE,uBAAOC,QAAQ,OAAf,kBACA,uBAAOjC,KAAK,OAAOkC,UAAQ,EAACnB,MAAOK,EAAMe,SAAU,SAACT,GAAD,OAAML,EAAQK,EAAEU,OAAOrB,QAAQsB,YAAY,qBAEhG,sBAAKL,UAAU,eAAf,UACE,wBAAOC,QAAQ,SAAf,oBACU,uBADV,6CAIA,uBAAOjC,KAAK,SAASe,MAAOO,EAAQa,SAAU,SAACT,GAAD,OAAMH,EAAUG,EAAEU,OAAOrB,QACtEsB,YAAY,uBAEf,wBAAQL,UAAU,MAAlB,oCC3BOM,MAdf,WAAoB,IAIXC,EAHiBf,qBAAWjB,GAA1BN,aACsBuC,KAAI,SAAArC,GAAW,OAAIA,EAAYmB,UAEvCmB,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAOC,IAAO,GAAGC,QAAQ,GAEvE,OACM,qCACE,8CACA,mCAAML,SCFDM,MARf,WACI,OACI,kDC+BOC,MAhCf,WAA2B,IAGnBC,EADgBvB,qBAAWjB,GAA1BN,aACsBuC,KAAI,SAAArC,GAAW,OAAIA,EAAYmB,UAEtD0B,EAASD,EACZ7C,QAAO,SAAAyC,GAAI,OAAIA,EAAO,KACtBF,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAOC,IAAO,GACrCC,QAAQ,GAELK,IAEH,EADDF,EAAQ7C,QAAO,SAAAyC,GAAI,OAAIA,EAAO,KAAGF,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAOC,IAAO,IAEtEC,QAAQ,GAGV,OAGS,sBAAKM,MAAM,oBAAX,UACH,gCACE,wCACA,oBAAIlB,UAAU,aAAd,eAA8BgB,QAEhC,gCACE,yCACA,oBAAIhB,UAAU,cAAd,eAA+BiB,YC1B5BE,EAAY,SAAC,GAAmB,IAAlBhD,EAAiB,EAAjBA,YAChBa,EAAoBQ,qBAAWjB,GAA/BS,kBACDoC,EAAOjD,EAAYmB,OAAS,EAAI,IAAM,IAE5C,OAEA,qBAAIU,UAAW7B,EAAYmB,OAAS,EAAI,QAAU,OAAlD,UACOnB,EAAYiB,KAAK,iCAAOgC,EAAP,KAAevB,KAAKwB,IAAIlD,EAAYmB,WACtD,wBAAQgC,QAAS,kBAAKtC,EAAkBb,EAAYC,KAAK4B,UAAU,aAAnE,mBCUKuB,MAff,WAA4B,IACjBtD,EAAeuB,qBAAWjB,GAA1BN,aAGT,OACM,qCACG,yCACL,oBAAK+B,UAAU,OAAf,SACK/B,EAAauC,KAAI,SAAArC,GAAW,OAAI,cAAC,EAAD,CAAkCA,YAAaA,GAA7BA,EAAYC,aCW1DoD,MAff,WACE,OACE,eAAC,EAAD,WACE,cAAC,EAAD,IACA,sBAAKxB,UAAU,YAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,WCbRyB,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.6f245ddb.chunk.js","sourcesContent":["export default (state,action)=>{\r\n    switch(action.type){\r\n        case 'DELETE_TRANSACTION':\r\n             return{\r\n                 ...state,\r\n                 transactions: state.transactions.filter(transaction => transaction.id \r\n                    !== action.payload)\r\n             }\r\n             case 'ADD_TRANSACTION':\r\n                 return{\r\n                     ...state,\r\n                     transactions: [action.payload,...state.transactions]\r\n                 }\r\n\r\n        default :\r\n        return state;\r\n    }\r\n}","import React,{createContext,useReducer } from 'react';\r\nimport AppReducer from './AppReducer';\r\n\r\n//Initial state\r\n\r\nconst initialState={\r\n    transactions :[]\r\n}\r\n//Create context\r\n\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n//Provider Component\r\n\r\nexport const GlobalProvider = ({children}) => {\r\n    const [state,dispatch] = useReducer(AppReducer,initialState);\r\n\r\n    //Actions \r\n    function deleteTransaction(id){\r\n        dispatch({\r\n            type: 'DELETE_TRANSACTION',\r\n            payload : id \r\n        })\r\n    }\r\n    function addTransaction(transaction){\r\n        dispatch({\r\n            type: 'ADD_TRANSACTION',\r\n            payload : transaction \r\n        })\r\n    }\r\n\r\n    return (\r\n        <GlobalContext.Provider value={{\r\n            transactions: state.transactions,\r\n            deleteTransaction,\r\n            addTransaction\r\n        }}>\r\n            {children}\r\n        </GlobalContext.Provider>\r\n    )\r\n    \r\n}\r\n","import React, {useState,useContext} from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\n\r\nfunction AddTransaction() {\r\n    const [text,setText] = useState('');\r\n    const [amount,setAmount]= useState(0);\r\n    const {addTransaction}= useContext(GlobalContext);\r\n    \r\n\r\n    const onSubmit = e =>{\r\n        \r\n      e.preventDefault();\r\n           const newTransaction = {\r\n            id :Math.floor(Math.random() * 10000000),\r\n            text,\r\n            amount : +amount ,\r\n\r\n        }\r\n        addTransaction(newTransaction);\r\n\r\n        \r\n         \r\n            \r\n        \r\n        \r\n            \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3>Add new transaction</h3>\r\n      <form  onSubmit={onSubmit}>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"text\">Text</label>\r\n          <input type=\"text\" required value={text} onChange={(e)=> setText(e.target.value)} placeholder=\"Enter text...\" />\r\n        </div>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"amount\"\r\n            >Amount <br />\r\n            (negative - expense, positive - income)</label\r\n          >\r\n          <input type=\"number\" value={amount} onChange={(e)=> setAmount(e.target.value)}\r\n           placeholder=\"Enter amount...\" />\r\n        </div>\r\n        <button className=\"btn\">Add transaction</button>\r\n      </form> \r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddTransaction\r\n","import React , {useContext} from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\n\r\nfunction Balance() {\r\n    const {transactions}= useContext(GlobalContext);\r\n    const amounts = transactions.map(transaction => transaction.amount);\r\n\r\n   const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\r\n    \r\n  return (\r\n        <>\r\n          <h4>Your Balance</h4>\r\n          <h1>${total}</h1>  \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Balance\r\n","import React from 'react'\r\n\r\nfunction Header() {\r\n    return (\r\n        <h2>\r\n            Expense Tracker\r\n        </h2>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React, {useContext} from 'react';\r\nimport { GlobalContext } from '../context/GlobalState'\r\n\r\nfunction IncomeExpenses() {\r\n   \r\n  const {transactions}= useContext(GlobalContext);\r\n  const amounts = transactions.map(transaction => transaction.amount);\r\n\r\n  const income = amounts\r\n    .filter(item => item > 0)\r\n    .reduce((acc, item) => (acc += item), 0)\r\n    .toFixed(2);\r\n\r\n  const expense = (\r\n    amounts.filter(item => item < 0).reduce((acc, item) => (acc += item), 0) *\r\n    -1\r\n  ).toFixed(2);\r\n  \r\n  \r\n  return (\r\n\r\n\r\n           <div class=\"inc-exp-container\">\r\n        <div>\r\n          <h4>Income</h4>\r\n          <p  className=\"money plus\">+${income}</p>\r\n        </div>\r\n        <div>\r\n          <h4>Expense</h4>\r\n          <p  className=\"money minus\">-${expense}</p>\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default IncomeExpenses\r\n","import React,{useContext} from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\n\r\nexport const Transaction=({transaction}) => {\r\n    const {deleteTransaction}= useContext(GlobalContext);\r\n    const sign = transaction.amount < 0 ? '-' : '+' ;\r\n    \r\n    return (\r\n    \r\n    <li className={transaction.amount < 0 ? 'minus' : 'plus'}>\r\n          {transaction.text}<span>{sign}$ {Math.abs(transaction.amount)}</span>\r\n          <button onClick={()=> deleteTransaction(transaction.id)} className=\"delete-btn\">x</button>\r\n        </li>\r\n    )   \r\n}\r\n\r\n\r\n","import React,{useContext} from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\nimport {Transaction} from './Transaction';\r\n\r\n\r\n\r\nfunction TransactionList() {\r\n    const {transactions}= useContext(GlobalContext);\r\n    \r\n  \r\n  return (\r\n        <>\r\n           <h3>History</h3>\r\n      <ul  className=\"list\">\r\n          {transactions.map(transaction =>(<Transaction key={transaction.id} transaction={transaction} />))}\r\n\r\n      </ul>  \r\n        </>\r\n    )\r\n}\r\n\r\nexport default TransactionList\r\n","\nimport './App.css';\nimport AddTransaction from './components/AddTransaction';\nimport Balance from './components/Balance';\nimport Header from './components/Header';\nimport IncomeExpenses from './components/IncomeExpenses';\nimport TransactionList from './components/TransactionList';\nimport { GlobalProvider } from './context/GlobalState';\n\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Header />\n      <div className=\"container\">\n        <Balance />\n        <IncomeExpenses />\n        <TransactionList />\n        <AddTransaction />\n        \n      </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n\n    <App />\n,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}